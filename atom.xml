<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hanyu666.github.io</id>
    <title>Hanyu&apos;s web</title>
    <updated>2020-03-18T15:27:18.547Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hanyu666.github.io"/>
    <link rel="self" href="https://hanyu666.github.io/atom.xml"/>
    <logo>https://hanyu666.github.io/images/avatar.png</logo>
    <icon>https://hanyu666.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Hanyu&apos;s web</rights>
    <entry>
        <title type="html"><![CDATA[代理模型]]></title>
        <id>https://hanyu666.github.io/post/njC3WWh7P/</id>
        <link href="https://hanyu666.github.io/post/njC3WWh7P/">
        </link>
        <updated>2020-03-18T15:25:36.000Z</updated>
        <content type="html"><![CDATA[<p>为了减少优化过程的计算负担，代理模型广泛应用于工程设计中。一般常见的比如径向基模型，神经网络，响应面模型，克里金模型等等。但是工程问题中又主要分为两大类:一种是带加点准则的代理模型优化，一种是直接基于实验设计的代理模型优化，下面谈谈两者的主要区别。</p>
<p>基于试验的代理模型，一般来说，主要应用于大型的复杂工程问题，比如说整车的碰撞优化这种高度非线性问题，或者无法进行尺寸参数化建模的复杂问题。它的求解思路简单，基本的求解思路就是在变量的范围内通过拉丁方抽样抽取一定数量的样本点，计算对应的响应值，根据样本点和响应值就可以构建相应的代理模型。然后根据传统的遗传算法或者说多目标优化算法添加相应约束进行优化，得到我们所需要的最优解，基于试验的代理模型优化，它存在的主要缺点就是模型精度不高，如果提高模型精度，则需要相应提高样本的数量。这样无疑增大了计算量。<br>
另外一种就是基于加点准则的代理模型。以克里金代理模型为例，他的基本思路跟前面是一样的。也是先抽样进行实验设计。获得样本点的响应值，构建初始的模型。一般初始的模型精度都是不高的。因此需要添加新的点来提高模型进度，但是怎么添加新的点是一个很有学问的东西，目前单目标优化比较常用的是基于期望改进的加点准则，根据这个准则能够自动计算出模型需要提升的点是多少，然后将这个点带入有限元进行计算。将计算得到的值作为新的样本点加入模型进行重新构建。通过循环几次。便能够构建符合精度的代理模型，这里的精度主要指的是在全局最优解附近的精度，然后通过全局优化算法进行优化。得到我们所需要的最优解。基于加点准则的代理模型的构建。它的优点在于初始样本的需求量少。且加点效率高。能够很快得到全局最优解。但是它存在一个缺点，就是必须进行参数化建模。不然每次更新得到了点，无法自动进行有限元计算。因此目前这种算法仅适用于零部件优化。</p>
<p>需要了解：</p>
<ul>
<li>贝叶斯优化</li>
<li>贝叶斯推断</li>
<li>贝叶斯估计（推断？）</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[参数模型和非参数模型的理解]]></title>
        <id>https://hanyu666.github.io/post/AfNsCEOXM/</id>
        <link href="https://hanyu666.github.io/post/AfNsCEOXM/">
        </link>
        <updated>2020-03-18T14:46:08.000Z</updated>
        <content type="html"><![CDATA[<h3 id="author">Author</h3>
<p><a href="Hanyu666.github.io">Hanyu Mei</a></p>
<h2 id="1-通俗的理解">1 通俗的理解</h2>
<p><strong>参数化模型（parametric model）</strong></p>
<p>指定目标函数（或模型）的形式，比如: 线性回归指定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>a</mi><mi>X</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y = aX+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>, 逻辑回归，感知机（这里的感知机应该理解为无非线性激活函数的单个神经元的感知模型）</p>
<p><strong>非参数模型（non-parametric model）</strong></p>
<p>对目标函数的形式不作过多的假定和限制</p>
<ul>
<li>决策树</li>
<li>朴素贝叶斯</li>
<li>支持向量机</li>
<li>神经网络</li>
</ul>
<h2 id="2-官方理解">2 官方理解</h2>
<p><strong>参数模型</strong><br>
假定模型符合某种分布（某种形式），这种分布由一些参数来确定。e.g., Gaussian distribution, 由均值和方差来决定。<br>
<strong>非参数模型</strong><br>
非参数模型不指定目标函数的形式。这并不代表模型并没有参数，反而会存在更多的参数（e.g.，NN中的weights and bias)。我们只知道该分布是存在的，却不知道这种分布到底是由哪些参数可以确定。所以模型必须通过“大量”的数据进行参数的推断。</p>
<blockquote>
<p>《Artificial Intelligence: A Modern Approach》：当数据多、先验少，用非参数模型；反之用参数模型。</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Keras调整学习率]]></title>
        <id>https://hanyu666.github.io/post/bkyubj9e4/</id>
        <link href="https://hanyu666.github.io/post/bkyubj9e4/">
        </link>
        <updated>2020-03-07T07:36:55.000Z</updated>
        <content type="html"><![CDATA[<h3 id="author">Author</h3>
<p><a href="Hanyu666.github.io">Hanyu Mei</a><br>
参考链接<a href="https://blog.csdn.net/zzc15806/article/details/79711114">CSDN参考链接</a></p>
<pre><code class="language-python">keras.callbacks.ReduceLROnPlateau(monitor='val_loss', factor=0.1, patience=10, verbose=0, mode='auto', epsilon=0.0001, cooldown=0, min_lr=0)
</code></pre>
<pre><code class="language-python">reduce_lr = ReduceLROnPlateau(monitor='val_loss', patience=10, mode='auto')
history = model.fit(X_train, y_train, batch_size, epochs, validation_split=2/8, callbacks=[reduce_lr],verbose=2)
</code></pre>
<ul>
<li>monitor：被监测的量</li>
<li>factor：每次减少学习率的因子，学习率将以lr = lr*factor的形式被减少</li>
<li>patience：当patience个epoch过去而模型性能不提升时，学习率减少的动作会被触发</li>
<li>mode：‘auto’，‘min’，‘max’之一，在min模式下，如果检测值触发学习率减少。在max模式下，当检测值不再上升则触发学习率减少。</li>
<li>epsilon：阈值，用来确定是否进入检测值的“平原区”</li>
<li>cooldown：学习率减少后，会经过cooldown个epoch才重新进行正常操作</li>
<li>min_lr：学习率的下限</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[线性回归模型（或最小二乘模型）]]></title>
        <id>https://hanyu666.github.io/post/test/</id>
        <link href="https://hanyu666.github.io/post/test/">
        </link>
        <updated>2020-03-05T03:47:05.000Z</updated>
        <content type="html"><![CDATA[<hr>
<h3 id="author">Author</h3>
<p><a href="https://hanyu666.github.io">Hanyu Mei</a><br>
利用多项式模型进行回归预测，sklearn.linear_model.LinearRegression<br>
对于如下形式的多项式：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><mo>∗</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">y=a_1*x_1+a_2*x_2+...+a_n*x_n
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>对于自激力而言:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>C</mi><mi>m</mi><mrow><mi>a</mi><mi>e</mi><mi>r</mi><mi>o</mi></mrow></msubsup><mo>=</mo><msub><mi>H</mi><mn>1</mn></msub><mo>⋅</mo><mi>h</mi><mo>+</mo><msub><mi>H</mi><mn>2</mn></msub><mo>⋅</mo><mover accent="true"><mi>h</mi><mo>˙</mo></mover><mo>+</mo><msub><mi>H</mi><mn>3</mn></msub><mo>⋅</mo><mover accent="true"><mi>α</mi><mo>˙</mo></mover><mo>+</mo><msub><mi>H</mi><mn>4</mn></msub><mo>⋅</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">C_m^{aero} = H_1\cdot {h} +H_2\cdot \dot{h} +H_3 \cdot \dot{\alpha} +H_4 \cdot \alpha 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">h</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.01463em;vertical-align:-0.08333em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9313em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">h</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.13889em;">˙</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.75119em;vertical-align:-0.08333em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11111000000000001em;">˙</span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span></span></p>
<p>非线性自激力的高次谐波项可以利用sklearn.preprocessing.PolynomialFeatures生成</p>
<pre><code class="language-python">import numpy as np
from sklearn.linear_model import LinearRegression as LR
from sklearn.preprocessing import PolynomialFeatures as PF
import matplotlib.pyplot as plt

LR = LR()
data = np.loadtxt('Data.txt')

X = data[:,:-1]
Y = data[:,-1]

# %%
poly = PF(degree=3,include_bias=False)
X = poly.fit_transform(X)
print(X.shape)

# %%
LR = LR.fit(X,Y)
Y_pred = LR.predict(X)

def error(a,b):
    '''
    a: pred_value
    b: origin_value
    '''
    mse = 1/len(a)*np.sum(np.power((a-b),2))
    mae = 1/len(a)*np.sum(np.abs(a-b))
    mape = 1/len(a)*np.sum(np.abs((a-b)/b))
    rmse = np.sqrt(mse)
    R_score = 1 - len(a)*mse/np.sum(np.power((b-np.mean(b)),2))
    return mse, mae, mape, rmse, R_score

mse_error, mae_error, mape_error, rmse_error, R_score = error(Y_pred,Y)
plt.figure()
plt.plot(Y,'r')
plt.plot(Y_pred,'b')
plt.show()
print('MAE:', mae_error)
print('MAPE:', mape_error)
print('RMSE:', rmse_error)
print('R_squard_score:', R_score)

# %%
print(LR.coef_) # 获取各项的

# %%
Data2 = np.vstack((Y,Y_pred)).T
np.savetxt('Data2.txt',Data2,fmt='%.8f')
</code></pre>
]]></content>
    </entry>
</feed>